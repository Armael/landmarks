BASEDIR=../../..

PPX=$(BASEDIR)/ppx/ppx_landmarks

.PHONY: clean native batch

native: test
	@rm -f failed
	@$(ENV) ./test 2> log.err > log.out && (test ! -f log.expected || diff -q log.expected log.out) && printf "%10s : \033[32mOK\033[0m\n" $$(basename $$PWD) \
                                     || (printf "%10s : \033[31mKO\033[0m\n" $$(basename $$PWD) && touch failed)

batch: test.batch
	@rm -f failed
	@$(ENV) ./test.batch 2> log.err > log.out && (test ! -f log.expected || diff -q log.expected log.out) && printf "%10s : \033[32mOK\033[0m\n" $$(basename $$PWD) \
                                           || (printf "%10s : \033[31mKO\033[0m\n" $$(basename $$PWD) && touch failed)

test: test.ml $(BASEDIR)/src/landmarks.cmxa $(PPX)
	@$(ENV) ocamlfind ocamlopt -I $(BASEDIR)/src -o test -ppx $(PPX) $(EXTRAS) landmarks.cmxa $(EXTRA_NATIVE) test.ml

test.batch: test.ml $(BASEDIR)/src/landmarks.cma $(PPX)
	@$(ENV) ocamlfind ocamlc -I $(BASEDIR)/src -o test.batch -ppx $(PPX) $(EXTRAS) landmarks.cma $(EXTRA_BATCH) test.ml

$(BASEDIR)/src/landmarks.cma:
	make -C $(BASEDIR)/src/ landmarks.cma

$(BASEDIR)/src/landmarks.cmxa:
	make -C $(BASEDIR)/src/ landmarks.cmxa

$(PPX):
	make -C $(BASEDIR)/ppx/ ppx_landmarks

clean::
	rm -f test test.batch *.cm[xoi] *.o log.err log.out failed *.json
